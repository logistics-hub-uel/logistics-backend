"""Init

Revision ID: fb26ee435948
Revises: 
Create Date: 2025-03-11 22:56:14.496034

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'fb26ee435948'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('account',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('full_name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('phone_number', sa.String(length=20), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('role', sa.Enum('admin', 'buyer', 'provider', name='role_enum'), nullable=True),
    sa.Column('tax_number', sa.String(), nullable=True),
    sa.Column('address', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone_number')
    )
    op.create_table('demand',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('from_date', sa.DateTime(), nullable=False),
    sa.Column('to_date', sa.DateTime(), nullable=False),
    sa.Column('demand_description', sa.String(), nullable=True),
    sa.Column('previous_experience', sa.String(), nullable=True),
    sa.Column('expectation', sa.String(), nullable=True),
    sa.Column('preference_social_media', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('is_support_preference', sa.Boolean(), nullable=False),
    sa.Column('type_demand_service', sa.String(), nullable=False),
    sa.Column('demand_status', sa.Enum('pending', 'accepted', 'rejected', 'completed', name='status_enum'), nullable=False),
    sa.Column('account_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('service',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('price', sa.NUMERIC(), nullable=False),
    sa.Column('available_time_slots', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('images_urls', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('is_support_preference', sa.Boolean(), nullable=False),
    sa.Column('preference_social_media', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('category', sa.String(), nullable=False),
    sa.Column('supplier_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['supplier_id'], ['account.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('demand_application',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('demand_id', sa.String(), nullable=False),
    sa.Column('supplier_id', sa.String(), nullable=False),
    sa.Column('payment_method', sa.String(), nullable=False),
    sa.Column('application_status', sa.Enum('pending', 'accepted', 'rejected', 'completed', name='status_enum'), nullable=False),
    sa.Column('promotion_event', sa.String(), nullable=True),
    sa.Column('note', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['demand_id'], ['demand.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['supplier_id'], ['account.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('service_rental',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('buyer_id', sa.String(), nullable=False),
    sa.Column('service_id', sa.String(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'accepted', 'rejected', 'completed', name='status_enum'), nullable=False),
    sa.Column('demand_description', sa.String(), nullable=True),
    sa.Column('expectation', sa.String(), nullable=True),
    sa.Column('from_date', sa.DateTime(), nullable=False),
    sa.Column('to_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['buyer_id'], ['account.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['service_id'], ['service.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('service_rental')
    op.drop_table('demand_application')
    op.drop_table('service')
    op.drop_table('demand')
    op.drop_table('account')
    # ### end Alembic commands ###
